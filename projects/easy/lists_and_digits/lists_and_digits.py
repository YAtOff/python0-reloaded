def concat_lists(first, second):
    """
    ## Сливане на списъци

    Дефинирайте функция `concat_lists(first, second)`, която приема като параметри
    два списъка `first` и `second` и връща като резултат нов списък, който
    представлява първият списък долепен до втория.

    Примерно използване:

    >>> concat_lists([1, 2, 3], [4, 5, 6])
    [1, 2, 3, 4, 5, 6]

    Помощ:
    1. Започваме с празен списък `result = []`
    2. Обхождаме първия списък и добавяме елементите му в `result`. За целта използваме `append`.
    3. Обхождаме втория списък и добавяме елементите му в `result`
    4. Накрая в `result` имаме нужния резултат.
    """
    pass


def number_to_list(number):
    """
    ## Задача 2 - От число в списък от цифри.

    Дефинирайте функция `number_to_list(number)`, която приема като параметър
    цяло число `number`, и връща като резултат списък от цифрите на числото.

    Примерно използване:

    >>> number_to_list(123)
    [1, 2, 3]

    Помощ:
    1. Започваме с празен списък `digits = []`
    2. Докато числото `number` не стане равно на 0
    3. Взимаме поредната последна цифра `digit = number % 10`
    4. Добавяме тази цифра в началото на списъка: `digits.insert(0, digit)`
    5. Режем последната цифра: `number = number // 10`
    6. Накрая в `digits` имаме нужния резултат.
    """
    pass


def list_to_number(digits):
    """
    ## Задача 3 - От списък от цифри в число.

    Дефинирайте функция `list_to_number(digits)`, която приема като параметър
    списък от цифри `digits`, и връща като резултат число, състоящо се от цифрите
    в списъка.

    Примерно използване:

    >>> list_to_number([1, 2, 3])
    123

    Помощ:
    1. Започваме с променлива, в която ще държим числото `number = 0`
    2. За всяка цифра `digit` от списъка
    3. Казваме, че `number = number * 10 + digit`
    4. Накрая в `number` имаме полученото число, от списъка от цифри
    """
    pass
